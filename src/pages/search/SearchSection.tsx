import React, { useState, useEffect, useCallback } from 'react';
import { SearchTab } from './Search';

interface SearchSectionProps {
  /** –¢–µ–∫—É—â–∏–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å */
  query: string;
  /** –ê–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ –ø–æ–∏—Å–∫–∞ */
  activeTab: SearchTab;
  /** Callback –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ */
  onSearch: (query: string) => void;
  /** Callback –¥–ª—è —Å–º–µ–Ω—ã –≤–∫–ª–∞–¥–∫–∏ */
  onTabChange: (tab: SearchTab) => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–µ–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏ –∏ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞
 * @param {SearchSectionProps} props –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @returns {JSX.Element} –°–µ–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞
 */
export default function SearchSection({ 
  query, 
  activeTab, 
  onSearch, 
  onTabChange 
}: SearchSectionProps): JSX.Element {
  const [inputValue, setInputValue] = useState<string>(query);

  useEffect(() => {
    setInputValue(query);
  }, [query]);

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
   */
  const handleSubmit = useCallback(() => {
    const trimmed = inputValue.trim();
    if (trimmed) {
      onSearch(trimmed);
    }
  }, [inputValue, onSearch]);

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
   * @param {React.KeyboardEvent<HTMLInputElement>} e –°–æ–±—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
   */
  const handleKeyPress = useCallback((
    e: React.KeyboardEvent<HTMLInputElement>
  ) => {
    if (e.key === 'Enter') {
      handleSubmit();
    }
  }, [handleSubmit]);

  /**
   * –û—á–∏—â–∞–µ—Ç –ø–æ–ª–µ –≤–≤–æ–¥–∞
   */
  const handleClear = useCallback(() => {
    setInputValue('');
  }, []);

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–ª–∏–∫ –ø–æ –≤–∫–ª–∞–¥–∫–µ
   * @param {SearchTab} tab –í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞
   * @param {React.MouseEvent} e –°–æ–±—ã—Ç–∏–µ –º—ã—à–∏
   */
  const handleTabClick = useCallback((
    tab: SearchTab,
    e: React.MouseEvent
  ) => {
    e.preventDefault();
    onTabChange(tab);
  }, [onTabChange]);

  return (
    <div className="search-header">
      <h1 className="search-heading">
        {query ? `Search results for "${query}"` : 'Search'}
      </h1>

      <div className="search-tabs" role="tablist">
        <button
          role="tab"
          aria-selected={activeTab === 'top'}
          className={`search-tab ${activeTab === 'top' ? 'search-tab-active' : ''}`}
          onClick={(e) => handleTabClick('top', e)}
        >
          Top Results
        </button>
        <button
          role="tab"
          aria-selected={activeTab === 'artists'}
          className={`search-tab ${activeTab === 'artists' ? 'search-tab-active' : ''}`}
          onClick={(e) => handleTabClick('artists', e)}
        >
          Artists
        </button>
        <button
          role="tab"
          aria-selected={activeTab === 'albums'}
          className={`search-tab ${activeTab === 'albums' ? 'search-tab-active' : ''}`}
          onClick={(e) => handleTabClick('albums', e)}
        >
          Albums
        </button>
        <button
          role="tab"
          aria-selected={activeTab === 'tracks'}
          className={`search-tab ${activeTab === 'tracks' ? 'search-tab-active' : ''}`}
          onClick={(e) => handleTabClick('tracks', e)}
        >
          Tracks
        </button>
      </div>

      <div className="search-input-wrapper">
        <input
          type="text"
          placeholder="Search for artists, albums, tracks..."
          className="search-input"
          value={inputValue}
          onChange={(e) => setInputValue(e.target.value)}
          onKeyPress={handleKeyPress}
          aria-label="Search query"
        />
        {inputValue && (
          <button 
            className="search-clear-btn" 
            onClick={handleClear}
            aria-label="Clear search"
            type="button"
          >
            √ó
          </button>
        )}
        <button 
          className="search-submit-btn" 
          onClick={handleSubmit}
          aria-label="Submit search"
          type="button"
          disabled={!inputValue.trim()}
        >
          üîç
        </button>
      </div>
    </div>
  );
}